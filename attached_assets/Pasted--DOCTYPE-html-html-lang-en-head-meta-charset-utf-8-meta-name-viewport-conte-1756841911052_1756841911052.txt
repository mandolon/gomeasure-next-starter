<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
  <title>GoMeasure — Schedule (Interior + Exterior)</title>
  <link href="https://fonts.googleapis.com/css2?family=Figtree:wght@400;500;600;700&display=swap" rel="stylesheet" />
  <style>
    :root{
      --wrap:1100px;
      --bg:#fafafb; --card:#fff; --line:#e6e7eb;
      --ink:#171717; --ink-7:#3a3f45; --ink-5:#6b7280;
      --accent:#db0f83; --accent-10:rgba(219,15,131,.10); --accent-30:rgba(219,15,131,.30);
      --radius:12px;
      --font-xl:28px; --font-lg:20px; --font-md:16px; --font-sm:14px;
    }
    *{box-sizing:border-box}
    body{
      margin:0;background:var(--bg);color:var(--ink);
      font:400 var(--font-md)/1.5 Figtree,system-ui,-apple-system,Segoe UI,Roboto,Arial,sans-serif;
    }
    .container{max-width:var(--wrap);margin:0 auto;padding:20px}

    /* tighter spacing per request */
    h1{margin:0;font-size:var(--font-xl);font-weight:600;letter-spacing:-0.01em}
    .page-sub{margin:3px 0 8px;color:var(--ink-5);font-size:var(--font-sm)}
    h2{margin:0;font-size:var(--font-lg);font-weight:600}
    .muted{color:var(--ink-5);font-size:var(--font-sm);margin:3px 0 6px}

    .grid{display:grid;grid-template-columns:2fr 1fr;gap:16px}
    @media(max-width:980px){.grid{grid-template-columns:1fr}}
    .card{background:var(--card);border:1px solid var(--line);border-radius:var(--radius);padding:18px}

    /* Accordion summary */
    .accordion{
      display:flex;align-items:center;justify-content:space-between;gap:12px;
      width:100%;padding:12px 14px;border:1px solid var(--line);border-radius:10px;background:#fff;cursor:pointer;margin-top:10px
    }
    .summary-stack{display:flex;flex-direction:column;gap:2px;align-items:flex-start}
    .scope-label{font-weight:700;color:#000;font-size:15px;letter-spacing:-0.01em}
    .scheduled-line{font-size:var(--font-sm);color:var(--ink-7)}
    .accordion .caret{opacity:.55;transition:transform .18s ease}
    .accordion[aria-expanded="true"] .caret{transform:rotate(90deg)}

    /* smooth open/close */
    .collapse{
      overflow:hidden;max-height:0;opacity:0;transform:scaleY(.98);
      transform-origin:top;transition:max-height .35s ease, opacity .25s ease, transform .25s ease;
      will-change:max-height,opacity,transform;
    }
    .collapse.open{max-height:1400px;opacity:1;transform:scaleY(1)}

    /* Calendar */
    .calendar-container{border:1px solid var(--line);border-radius:10px;background:#fff;padding:12px;margin-top:10px}
    .calendar-header{display:flex;align-items:center;justify-content:space-between;margin-bottom:8px}
    .calendar-month{font-size:14px;font-weight:600;color:var(--ink)}
    /* single nav button area */
    .nav-single{display:flex;gap:8px;align-items:center}
    .nav-btn{
      display:inline-flex;gap:6px;align-items:center;justify-content:center;
      height:28px;padding:0 10px;border:1px solid var(--line);border-radius:6px;background:#fff;
      cursor:pointer;transition:background .15s,border-color .15s;
      font-size:12px;color:var(--ink-7)
    }
    .nav-btn:hover{background:rgba(219,15,131,.05);border-color:var(--accent)}

    .calendar-grid{display:grid;grid-template-columns:repeat(7,1fr);gap:6px}
    .calendar-day-header{padding:2px 0 6px;text-align:center;font-size:11px;text-transform:uppercase;color:var(--ink-5);font-weight:500;letter-spacing:.5px}

    .calendar-day{
      position:relative;display:grid;place-items:center;height:36px;cursor:pointer;font-size:12px;color:var(--ink)
    }
    .calendar-day .day-num{position:relative;z-index:1}
    .calendar-day.available::before{
      content:"";position:absolute;inset:0;margin:auto;width:26px;height:26px;border:2px solid var(--accent-30);
      border-radius:50%;transition:all .15s;background:transparent;z-index:0;
    }
    .calendar-day.available:hover::before{box-shadow:0 0 0 3px var(--accent-10)}
    .calendar-day.disabled{cursor:not-allowed;color:var(--ink-5);opacity:.45}
    .calendar-day.disabled::before{display:none}
    .calendar-day.selected{color:#fff;font-weight:600}
    .calendar-day.selected::before{background:var(--accent);border-color:var(--accent)}

    /* Times (with borders + hover) */
    .field{margin:10px 0 6px}
    .label{display:block;font-size:13px;color:var(--ink-7)}
    .times{display:grid;grid-template-columns:repeat(4,1fr);gap:6px;margin-top:6px}
    @media(max-width:760px){.times{grid-template-columns:repeat(3,1fr)}}
    .time{
      padding:10px;text-align:center;font-size:14px;border:1px solid var(--line);
      border-radius:8px;background:#fff;cursor:pointer;transition:background .15s,color .15s;
    }
    .time:hover{background:rgba(219,15,131,.10)}
    .time[data-selected="true"]{background:var(--accent);color:#fff;border-color:var(--accent)}

    /* Booking policy */
    .disclaimer{
      margin:10px 0 0;padding:10px;border:1px solid var(--line);
      background:#f8f9fa;border-radius:8px;font-size:12px;color:var(--ink-7)
    }

    /* Sidebar */
    .sidebar{display:flex;flex-direction:column;gap:16px}
    .checklist{list-style:none;padding:0;margin:8px 0 0}
    .checklist li{display:flex;gap:8px;margin:6px 0;font-size:14px;color:var(--ink-7)}
    .check{color:var(--accent);font-weight:700}
    .price-row{display:flex;justify-content:space-between;align-items:baseline;margin:4px 0}
    .price-label{font-size:14px;color:var(--ink-5)}
    .price-value{font-size:14px;font-weight:500}
    .price-total{font-size:20px;font-weight:600;color:var(--ink);margin-top:8px;padding-top:8px;border-top:1px solid var(--line)}
    .small{font-size:12px;color:var(--ink-5)}

    /* Buttons BELOW estimate */
    .action-row{display:flex;gap:8px;justify-content:flex-end}
    .btn{height:40px;padding:0 16px;border-radius:8px;border:1px solid transparent;display:inline-flex;align-items:center;justify-content:center;font-weight:600;cursor:pointer;transition:filter .15s}
    .btn-primary{background:var(--accent);color:#fff;border-color:var(--accent);min-width:120px}
    .btn-primary:hover{filter:brightness(1.05)}
    .btn-ghost{background:#fff;color:var(--ink);border:1px solid var(--line)}
    .btn-ghost:hover{filter:brightness(1.02)}
  </style>
</head>
<body>
  <main class="container">
    <header>
      <h1>Complete order details</h1>
      <p class="page-sub">Only a few steps left to complete the capture service order.</p>
    </header>

    <div class="grid">
      <!-- LEFT -->
      <section class="card">
        <h2>Choose a time</h2>
        <p class="muted">Choose a start time. The site visit takes about 4 hours 30 minutes.</p>

        <!-- Interior -->
        <button class="accordion" data-acc="int" aria-expanded="true" type="button">
          <div class="summary-stack">
            <div class="scope-label">Interior scan</div>
            <div class="scheduled-line" data-sched="int">Select a date and time</div>
          </div>
          <svg class="caret" width="18" height="18" viewBox="0 0 24 24" fill="none">
            <path d="M9 18l6-6-6-6" stroke="currentColor" stroke-width="2"/>
          </svg>
        </button>
        <div class="collapse open" data-wrap="int" aria-hidden="false">
          <div class="calendar-container">
            <div class="calendar-header">
              <div class="calendar-month" data-month="int">—</div>
              <div class="nav-single">
                <button class="nav-btn" data-nav="int">Next ›</button>
              </div>
            </div>
            <div class="calendar-grid" data-grid="int"></div>
          </div>
          <div class="field">
            <div class="label">Available times</div>
            <div class="times" data-times="int"></div>
          </div>
          <div class="disclaimer">
            <strong>Booking Policy:</strong> Appointments can be rescheduled up to 24 hours before the scheduled time. Same-day cancellations may incur a fee. We’ll confirm your appointment 24 hours in advance.
          </div>
        </div>

        <!-- Exterior -->
        <button class="accordion" data-acc="ext" aria-expanded="true" type="button">
          <div class="summary-stack">
            <div class="scope-label">Exterior scan</div>
            <div class="scheduled-line" data-sched="ext">Select a date and time</div>
          </div>
          <svg class="caret" width="18" height="18" viewBox="0 0 24 24" fill="none">
            <path d="M9 18l6-6-6-6" stroke="currentColor" stroke-width="2"/>
          </svg>
        </button>
        <div class="collapse open" data-wrap="ext" aria-hidden="false">
          <div class="calendar-container">
            <div class="calendar-header">
              <div class="calendar-month" data-month="ext">—</div>
              <div class="nav-single">
                <button class="nav-btn" data-nav="ext">Next ›</button>
              </div>
            </div>
            <div class="calendar-grid" data-grid="ext"></div>
          </div>
          <div class="field">
            <div class="label">Available times</div>
            <div class="times" data-times="ext"></div>
          </div>
          <div class="disclaimer">
            <strong>Booking Policy:</strong> Appointments can be rescheduled up to 24 hours before the scheduled time. Same-day cancellations may incur a fee. We’ll confirm your appointment 24 hours in advance.
          </div>
        </div>
      </section>

      <!-- RIGHT -->
      <aside class="sidebar">
        <div class="card">
          <h2 style="font-size:18px;margin:0 0 6px">Schedule checklist</h2>
          <ul class="checklist">
            <li><span class="check">✓</span> Date and time selected</li>
            <li><span class="check">✓</span> Site accessibility confirmed</li>
            <li><span class="check">✓</span> Weather backup plan in place</li>
            <li><span class="check">✓</span> Equipment requirements verified</li>
          </ul>
        </div>

        <div class="card" id="estimateCard">
          <h2 style="font-size:18px;margin:0 0 6px">Estimate</h2>
          <div class="price-row"><span class="price-label">Interior</span><span class="price-value">$250.00</span></div>
          <div class="price-row"><span class="price-label">Exterior</span><span class="price-value">$250.00</span></div>
          <div class="price-row price-total"><span>Total</span><span>$500.00</span></div>
          <p class="small" style="margin-top:6px">*Tax not included</p>
        </div>

        <div class="action-row">
          <button class="btn btn-ghost" id="sidebarBack">Back</button>
          <button class="btn btn-primary" id="sidebarNext">Next</button>
        </div>
      </aside>
    </div>
  </main>

  <script>
    // Shared state & helpers
    const TIMES = ["8:00 AM","8:30 AM","9:00 AM","9:30 AM","10:00 AM","10:30 AM","11:00 AM","11:30 AM","12:00 PM","12:30 PM","1:00 PM","1:30 PM","2:00 PM","2:30 PM","3:00 PM","3:30 PM","4:00 PM"];
    const today = new Date(); today.setHours(0,0,0,0);
    const currentMonth = new Date(today.getFullYear(), today.getMonth(), 1);
    const nextMonth = new Date(today.getFullYear(), today.getMonth()+1, 1);

    function fmtMonth(d){ return d.toLocaleDateString(undefined,{month:'long',year:'numeric'}); }
    function scheduledText(iso,time){
      if(!iso && !time) return "Select a date and time";
      const datePart = iso ? new Date(iso).toLocaleDateString(undefined,{weekday:'long', month:'long', day:'numeric'}) : "—";
      const timePart = time || "—";
      return `Select a date and time` // interim text until time picked
    }

    // Setup one picker block (interior/exterior)
    function setupPicker(key){
      const accBtn = document.querySelector(`[data-acc="${key}"]`);
      const wrap   = document.querySelector(`[data-wrap="${key}"]`);
      const sched  = document.querySelector(`[data-sched="${key}"]`);
      const monthEl= document.querySelector(`[data-month="${key}"]`);
      const grid   = document.querySelector(`[data-grid="${key}"]`);
      const times  = document.querySelector(`[data-times="${key}"]`);
      const navBtn = document.querySelector(`[data-nav="${key}"]`);

      let viewMonth = new Date(currentMonth);
      let onNext = true;          // single button mode: true=next, false=back
      let selectedISO = null;
      let selectedTime = null;

      function buildMonth(){
        grid.innerHTML = '';
        monthEl.textContent = fmtMonth(viewMonth);

        // headers
        ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'].forEach(day=>{
          const head = document.createElement('div');
          head.className = 'calendar-day-header';
          head.textContent = day;
          grid.appendChild(head);
        });

        const first = new Date(viewMonth.getFullYear(), viewMonth.getMonth(), 1);
        const last  = new Date(viewMonth.getFullYear(), viewMonth.getMonth()+1, 0);
        const startOffset = first.getDay();

        for(let i=0;i<startOffset;i++) grid.appendChild(document.createElement('div'));

        for(let d=1; d<=last.getDate(); d++){
          const date = new Date(viewMonth.getFullYear(), viewMonth.getMonth(), d);
          const cell = document.createElement('div');
          cell.className = 'calendar-day';
          const num = document.createElement('span'); num.className='day-num'; num.textContent=d;
          cell.appendChild(num);

          const isPast = date < today;
          const isWeekend = date.getDay()===0 || date.getDay()===6;

          if(isPast || isWeekend){
            cell.classList.add('disabled');
          }else{
            cell.classList.add('available');
            if(selectedISO && selectedISO === date.toISOString().slice(0,10)) cell.classList.add('selected');
            cell.addEventListener('click', ()=>{
              selectedISO = date.toISOString().slice(0,10);
              grid.querySelectorAll('.calendar-day.available').forEach(el=>el.classList.remove('selected'));
              cell.classList.add('selected');
              sched.textContent = `Select a date and time`; // keep prompt until time picked
            });
          }
          grid.appendChild(cell);
        }

        // nav button label/state
        if(viewMonth.getTime() === currentMonth.getTime()){
          onNext = true; navBtn.textContent = 'Next ›';
        } else {
          onNext = false; navBtn.textContent = '‹ Back';
        }
      }

      // single button toggles between next/back months
      navBtn.addEventListener('click', ()=>{
        viewMonth = onNext ? nextMonth : currentMonth;
        buildMonth();
      });

      // times
      function buildTimes(){
        times.innerHTML='';
        TIMES.forEach(t=>{
          const b=document.createElement('button');
          b.className='time'; b.type='button'; b.textContent=t;
          if(selectedTime===t) b.dataset.selected='true';
          b.addEventListener('click', ()=>{
            if(!selectedISO){ alert('Please pick a date first.'); return; }
            selectedTime = t;
            [...times.children].forEach(x=>x.removeAttribute('data-selected'));
            b.dataset.selected='true';

            const pretty = new Date(selectedISO).toLocaleDateString(undefined,{weekday:'long', month:'long', day:'numeric'});
            sched.textContent = `Scheduled for ${pretty} at ${selectedTime}`;

            // collapse section after a full selection
            accBtn.setAttribute('aria-expanded','false');
            wrap.classList.remove('open');
            wrap.setAttribute('aria-hidden','true');
          });
          times.appendChild(b);
        });
      }

      // accordion toggle
      accBtn.addEventListener('click', ()=>{
        const expanded = accBtn.getAttribute('aria-expanded')==='true';
        accBtn.setAttribute('aria-expanded', String(!expanded));
        wrap.classList.toggle('open', !expanded);
        wrap.setAttribute('aria-hidden', String(expanded));
      });

      // init
      buildMonth();
      buildTimes();
      sched.textContent = 'Select a date and time';
    }

    // Wire both pickers
    setupPicker('int');
    setupPicker('ext');

    // demo nav
    document.getElementById('sidebarBack').addEventListener('click', ()=>alert('Back (demo)'));
    document.getElementById('sidebarNext').addEventListener('click', ()=>alert('Next (demo)'));
  </script>
</body>
</html>
